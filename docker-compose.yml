services:
  app:
    build: .
    container_name: unfv_grade_app
    restart: unless-stopped
    ports:
      - "8000:80"
    environment:
      APP_NAME: "${APP_NAME:-UNFV Grade}"
      APP_ENV: "${APP_ENV:-production}"
      APP_KEY: "${APP_KEY}"
      APP_DEBUG: "${APP_DEBUG:-false}"
      APP_URL: "${APP_URL:-http://localhost:8000}"
      DB_CONNECTION: "${DB_CONNECTION:-pgsql}"
      DB_HOST: "${DB_HOST:-db}"
      DB_PORT: "${DB_PORT:-5432}"
      DB_DATABASE: "${DB_DATABASE:-unfv_grade}"
      DB_USERNAME: "${DB_USERNAME:-unfv_user}"
      DB_PASSWORD: "${DB_PASSWORD:-1234}"
      SESSION_DRIVER: "${SESSION_DRIVER:-file}"
      CACHE_STORE: "${CACHE_STORE:-file}"
      QUEUE_CONNECTION: "${QUEUE_CONNECTION:-sync}"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache

  db:
    image: postgres:15
    container_name: unfv_grade_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: "${DB_DATABASE:-unfv_grade}"
      POSTGRES_USER: "${DB_USERNAME:-unfv_user}"
      POSTGRES_PASSWORD: "${DB_PASSWORD:-1234}"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-unfv_user} -d ${DB_DATABASE:-unfv_grade}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

volumes:
  postgres_data:
